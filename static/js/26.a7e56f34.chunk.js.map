{"version":3,"file":"static/js/26.a7e56f34.chunk.js","mappings":"iXAmBA,EAhBiB,SAAC,GAA0D,IAAD,IAAvDA,KAAQC,EAA+C,EAA/CA,cAAeC,EAAgC,EAAhCA,UAAWC,EAAqB,EAArBA,aAG9CC,EAASD,EAAY,0CACYA,GAFrC,mEAKF,OACE,iCACE,SAACE,EAAD,CAAeC,IAAKF,KACpB,SAAC,KAAD,UAAsBH,KACtB,UAAC,KAAD,wBAAgCC,OAGrC,EAIYG,EAAgBE,EAAAA,GAAAA,IAAH,0D,GAKSA,EAAAA,GAAAA,EAAH,sB,SCgBhC,EAnCa,WACX,OAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACMC,GAASC,EAAAA,EAAAA,MAef,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,WAAMC,GAAN,iGAESC,EAAAA,EAAAA,IAAQD,GAFjB,OAERE,EAFQ,OAGdP,EAAYO,EAASjB,KAAKkB,MAHZ,gDAKdC,QAAQC,IAAR,MALc,yDAAH,sDASfN,EAAUH,EAAOU,QAClB,GAAE,CAACV,EAAOU,WAGT,+BACE,SAACC,EAAD,UACwB,IAApBb,EAASc,QACTd,EAASe,KAAI,SAAAC,GAAE,OACb,SAACC,EAAD,WACE,SAAC,EAAD,CAAU1B,KAAMyB,KADGA,EAAGV,GADX,MAKf,SAAC,EAAAY,qBAAD,kDAOT,EAIYL,EAAiBf,EAAAA,GAAAA,GAAH,sBACdmB,EAAiBnB,EAAAA,GAAAA,GAAH,qB","sources":["components/CastItem.jsx","pages/Cast.jsx"],"sourcesContent":["import { ParagraphBodyStyled } from 'pages';\nimport styled from 'styled-components';\n\nconst CastItem = ({ data: { original_name, character, profile_path } }) => {\n  const defaultURL =\n    'https://image.tmdb.org/t/p/w500//8qBylBsQf4llkGrWR3qAsOtOU8O.jpg';\n  const imgUrl = profile_path\n    ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n    : defaultURL;\n\n  return (\n    <>\n      <CastImgStyled src={imgUrl} />\n      <ParagraphBodyStyled>{original_name}</ParagraphBodyStyled>\n      <ParagraphBodyStyled>Character:{character}</ParagraphBodyStyled>\n    </>\n  );\n};\n\nexport default CastItem;\n\nexport const CastImgStyled = styled.img`\n  width: 100px;\n  height: auto;\n`;\n\nexport const CastParagraphStyled = styled.p``;\n","import { useEffect, useState } from 'react';\nimport { getCast } from '../helpers/api';\nimport { useParams } from 'react-router-dom';\nimport CastItem from 'components/CastItem';\nimport styled from 'styled-components';\nimport { ParagraphTitleStyled } from './MovieDetails';\n\nconst Cast = () => {\n  const [castData, setCastData] = useState([]);\n  const params = useParams();\n\n  useEffect(() => {\n    const fetchCast = async id => {\n      try {\n        const response = await getCast(id);\n        setCastData(response.data.cast);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchCast(params.movieId);\n  }, [params.movieId]);\n\n  return (\n    <>\n      <CastListStyled>\n        {(castData.length !== 0 &&\n          castData.map(el => (\n            <CastItemStyled key={el.id}>\n              <CastItem data={el} />\n            </CastItemStyled>\n          ))) || (\n          <ParagraphTitleStyled>\n            There are no Casts on this movie\n          </ParagraphTitleStyled>\n        )}\n      </CastListStyled>\n    </>\n  );\n};\n\nexport default Cast;\n\nexport const CastListStyled = styled.ul``;\nexport const CastItemStyled = styled.li``;\n"],"names":["data","original_name","character","profile_path","imgUrl","CastImgStyled","src","styled","useState","castData","setCastData","params","useParams","useEffect","fetchCast","id","getCast","response","cast","console","log","movieId","CastListStyled","length","map","el","CastItemStyled","ParagraphTitleStyled"],"sourceRoot":""}