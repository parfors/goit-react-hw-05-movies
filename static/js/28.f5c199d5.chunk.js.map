{"version":3,"file":"static/js/28.f5c199d5.chunk.js","mappings":"8ZAiBA,EAfmB,SAAC,GAAyC,IAAvCA,EAAsC,EAAtCA,KAAsC,IAAhCA,KAAQC,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,QAC1C,OACE,iCACE,SAAC,KAAD,UAAuBD,KAEvB,SAAC,KAAD,UAAsBC,IACrBF,IACC,SAAC,KAAD,oDAMP,E,UC2BD,EAnCgB,WACd,OAAsCG,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACMC,GAASC,EAAAA,EAAAA,MAef,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,WAAMC,GAAN,iGAEMC,EAAAA,EAAAA,IAAUD,GAFhB,OAEXE,EAFW,OAGjBP,EAAeO,EAASZ,KAAKa,SAHZ,gDAKjBC,QAAQC,IAAR,MALiB,yDAAH,sDASlBN,EAAaH,EAAOU,QACrB,GAAE,CAACV,EAAOU,WAGT,+BACE,SAACC,EAAD,UAC2B,IAAvBb,EAAYc,QACZd,EAAYe,KAAI,SAAAC,GAAE,OAChB,SAACC,EAAD,WACE,SAAC,EAAD,CAAYrB,KAAMoB,KADGA,EAAGV,GADV,MAKlB,SAACY,EAAD,oDAOT,EAIYL,EAAmBM,EAAAA,GAAAA,GAAH,sBAChBF,EAAmBE,EAAAA,GAAAA,GAAH,sBAChBD,GAAwBC,EAAAA,EAAAA,IAAOC,EAAAA,qBAAPD,CAAH,kE","sources":["components/ReviewItem.jsx","pages/Reviews.jsx"],"sourcesContent":["import { ParagraphBodyStyled, ParagraphTitleStyled } from 'pages';\n\nconst ReviewItem = ({ data, data: { author, content } }) => {\n  return (\n    <>\n      <ParagraphTitleStyled>{author}</ParagraphTitleStyled>\n\n      <ParagraphBodyStyled>{content}</ParagraphBodyStyled>\n      {data && (\n        <ParagraphBodyStyled>\n          There are no reviews for this movie\n        </ParagraphBodyStyled>\n      )}\n    </>\n  );\n};\n\nexport default ReviewItem;\n","import { getReview } from '../helpers/api';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport styled from 'styled-components';\nimport ReviewItem from 'components/ReviewItem';\nimport { ParagraphTitleStyled } from './MovieDetails';\n\nconst Reviews = () => {\n  const [reviewsData, setReviewsData] = useState([]);\n  const params = useParams();\n\n  useEffect(() => {\n    const fetchReviews = async id => {\n      try {\n        const response = await getReview(id);\n        setReviewsData(response.data.results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchReviews(params.movieId);\n  }, [params.movieId]);\n\n  return (\n    <>\n      <ReviewListStyled>\n        {(reviewsData.length !== 0 &&\n          reviewsData.map(el => (\n            <ReviewItemStyled key={el.id}>\n              <ReviewItem data={el} />\n            </ReviewItemStyled>\n          ))) || (\n          <ReviewParagraphStyled>\n            There are no reviews on this movie\n          </ReviewParagraphStyled>\n        )}\n      </ReviewListStyled>\n    </>\n  );\n};\n\nexport default Reviews;\n\nexport const ReviewListStyled = styled.ul``;\nexport const ReviewItemStyled = styled.li``;\nexport const ReviewParagraphStyled = styled(ParagraphTitleStyled)`\n  margin-top: 15px;\n  margin-left: 15px;\n`;\n"],"names":["data","author","content","useState","reviewsData","setReviewsData","params","useParams","useEffect","fetchReviews","id","getReview","response","results","console","log","movieId","ReviewListStyled","length","map","el","ReviewItemStyled","ReviewParagraphStyled","styled","ParagraphTitleStyled"],"sourceRoot":""}